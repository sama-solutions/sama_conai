#!/bin/bash

# Script de test de l'application mobile SAMA CONAI avec authentification

echo "üîê TEST APPLICATION MOBILE SAMA CONAI AVEC LOGIN"
echo "==============================================="

# V√©rifier que l'application mobile est lanc√©e
echo "üîç V√©rification du serveur mobile..."
if curl -s http://localhost:3001 > /dev/null; then
    echo "‚úÖ Serveur mobile accessible"
else
    echo "‚ùå Serveur mobile non accessible"
    echo "   Lancez d'abord: ./launch_mobile_app.sh"
    exit 1
fi

echo ""
echo "üîê TEST AUTHENTIFICATION"
echo "======================="

# Test login admin
echo "üî∏ Test login admin..."
LOGIN_RESPONSE=$(curl -s -X POST -H "Content-Type: application/json" \
    -d '{"email":"admin","password":"admin"}' \
    http://localhost:3001/api/mobile/auth/login)

if echo "$LOGIN_RESPONSE" | grep -q '"success":true'; then
    TOKEN=$(echo "$LOGIN_RESPONSE" | grep -o '"token":"[^"]*"' | cut -d'"' -f4)
    USER_NAME=$(echo "$LOGIN_RESPONSE" | grep -o '"name":"[^"]*"' | cut -d'"' -f4)
    echo "‚úÖ Login admin r√©ussi - Token: ${TOKEN:0:10}... - Utilisateur: $USER_NAME"
else
    echo "‚ùå Login admin √©chou√©"
    echo "   R√©ponse: $LOGIN_RESPONSE"
    exit 1
fi

# Test login d√©mo
echo "üî∏ Test login d√©mo..."
DEMO_RESPONSE=$(curl -s -X POST -H "Content-Type: application/json" \
    -d '{"email":"demo@sama-conai.sn","password":"demo123"}' \
    http://localhost:3001/api/mobile/auth/login)

if echo "$DEMO_RESPONSE" | grep -q '"success":true'; then
    DEMO_TOKEN=$(echo "$DEMO_RESPONSE" | grep -o '"token":"[^"]*"' | cut -d'"' -f4)
    DEMO_USER=$(echo "$DEMO_RESPONSE" | grep -o '"name":"[^"]*"' | cut -d'"' -f4)
    echo "‚úÖ Login d√©mo r√©ussi - Token: ${DEMO_TOKEN:0:10}... - Utilisateur: $DEMO_USER"
else
    echo "‚ùå Login d√©mo √©chou√©"
    echo "   R√©ponse: $DEMO_RESPONSE"
fi

# Test login invalide
echo "üî∏ Test login invalide..."
INVALID_RESPONSE=$(curl -s -X POST -H "Content-Type: application/json" \
    -d '{"email":"invalid","password":"wrong"}' \
    http://localhost:3001/api/mobile/auth/login)

if echo "$INVALID_RESPONSE" | grep -q '"success":false'; then
    echo "‚úÖ Rejet login invalide - S√©curit√© OK"
else
    echo "‚ùå Probl√®me s√©curit√© - Login invalide accept√©"
fi

echo ""
echo "üì± TEST ACC√àS PROT√âG√â"
echo "===================="

# Test dashboard avec token
echo "üî∏ Test dashboard avec token admin..."
DASHBOARD_RESPONSE=$(curl -s -H "Authorization: Bearer $TOKEN" \
    http://localhost:3001/api/mobile/citizen/dashboard)

if echo "$DASHBOARD_RESPONSE" | grep -q '"success":true'; then
    USER_EMAIL=$(echo "$DASHBOARD_RESPONSE" | grep -o '"email":"[^"]*"' | cut -d'"' -f4)
    TOTAL_REQUESTS=$(echo "$DASHBOARD_RESPONSE" | grep -o '"total_requests":[0-9]*' | cut -d':' -f2)
    SOURCE=$(echo "$DASHBOARD_RESPONSE" | grep -o '"source":"[^"]*"' | cut -d'"' -f4)
    echo "‚úÖ Dashboard accessible - Email: $USER_EMAIL - Demandes: $TOTAL_REQUESTS - Source: $SOURCE"
else
    echo "‚ùå Dashboard non accessible avec token"
fi

# Test dashboard sans token
echo "üî∏ Test dashboard sans token..."
NO_TOKEN_RESPONSE=$(curl -s http://localhost:3001/api/mobile/citizen/dashboard)

if echo "$NO_TOKEN_RESPONSE" | grep -q '"requireAuth":true'; then
    echo "‚úÖ Dashboard prot√©g√© - Authentification requise"
else
    echo "‚ùå Dashboard non prot√©g√© - Probl√®me de s√©curit√©"
fi

# Test liste demandes avec token
echo "üî∏ Test liste demandes avec token..."
REQUESTS_RESPONSE=$(curl -s -H "Authorization: Bearer $TOKEN" \
    http://localhost:3001/api/mobile/citizen/requests)

if echo "$REQUESTS_RESPONSE" | grep -q '"success":true'; then
    REQUESTS_COUNT=$(echo "$REQUESTS_RESPONSE" | grep -o '"total":[0-9]*' | cut -d':' -f2)
    echo "‚úÖ Liste demandes accessible - Total: $REQUESTS_COUNT demandes"
else
    echo "‚ùå Liste demandes non accessible"
fi

# Test logout
echo "üî∏ Test logout..."
LOGOUT_RESPONSE=$(curl -s -X POST -H "Authorization: Bearer $TOKEN" \
    http://localhost:3001/api/mobile/auth/logout)

if echo "$LOGOUT_RESPONSE" | grep -q '"success":true'; then
    echo "‚úÖ Logout r√©ussi"
else
    echo "‚ùå Logout √©chou√©"
fi

# Test acc√®s apr√®s logout
echo "üî∏ Test acc√®s apr√®s logout..."
POST_LOGOUT_RESPONSE=$(curl -s -H "Authorization: Bearer $TOKEN" \
    http://localhost:3001/api/mobile/citizen/dashboard)

if echo "$POST_LOGOUT_RESPONSE" | grep -q '"requireAuth":true'; then
    echo "‚úÖ Token invalid√© apr√®s logout - S√©curit√© OK"
else
    echo "‚ùå Token encore valide apr√®s logout - Probl√®me s√©curit√©"
fi

echo ""
echo "üåê TEST INTERFACE WEB"
echo "===================="

# Test interface principale
echo "üî∏ Test interface de login..."
if curl -s http://localhost:3001 | grep -q "SAMA CONAI"; then
    echo "‚úÖ Interface de login accessible"
else
    echo "‚ùå Interface de login non accessible"
fi

echo ""
echo "üìä R√âSUM√â DES TESTS"
echo "=================="

# Compter les succ√®s
SUCCESS_COUNT=0
TOTAL_TESTS=9

# V√©rifier chaque test
if echo "$LOGIN_RESPONSE" | grep -q '"success":true'; then
    ((SUCCESS_COUNT++))
fi

if echo "$DEMO_RESPONSE" | grep -q '"success":true'; then
    ((SUCCESS_COUNT++))
fi

if echo "$INVALID_RESPONSE" | grep -q '"success":false'; then
    ((SUCCESS_COUNT++))
fi

if echo "$DASHBOARD_RESPONSE" | grep -q '"success":true'; then
    ((SUCCESS_COUNT++))
fi

if echo "$NO_TOKEN_RESPONSE" | grep -q '"requireAuth":true'; then
    ((SUCCESS_COUNT++))
fi

if echo "$REQUESTS_RESPONSE" | grep -q '"success":true'; then
    ((SUCCESS_COUNT++))
fi

if echo "$LOGOUT_RESPONSE" | grep -q '"success":true'; then
    ((SUCCESS_COUNT++))
fi

if echo "$POST_LOGOUT_RESPONSE" | grep -q '"requireAuth":true'; then
    ((SUCCESS_COUNT++))
fi

if curl -s http://localhost:3001 | grep -q "SAMA CONAI"; then
    ((SUCCESS_COUNT++))
fi

echo "‚úÖ Tests r√©ussis: $SUCCESS_COUNT/$TOTAL_TESTS"

if [ $SUCCESS_COUNT -eq $TOTAL_TESTS ]; then
    echo "üéâ TOUS LES TESTS SONT PASS√âS !"
    echo ""
    echo "üîê APPLICATION MOBILE SAMA CONAI AVEC LOGIN OP√âRATIONNELLE"
    echo "========================================================="
    echo ""
    echo "üåê URL d'acc√®s: http://localhost:3001"
    echo "üîê Authentification: Obligatoire"
    echo "üì± Interface: Mobile moderne avec login"
    echo "üîí S√©curit√©: Protection compl√®te"
    echo ""
    echo "üéØ COMPTES DE TEST VALID√âS:"
    echo "   ‚úÖ Admin: admin / admin"
    echo "   ‚úÖ D√©mo: demo@sama-conai.sn / demo123"
    echo ""
    echo "üîê FONCTIONNALIT√âS S√âCURIS√âES TEST√âES:"
    echo "   ‚úÖ Login avec validation credentials"
    echo "   ‚úÖ G√©n√©ration et gestion tokens JWT"
    echo "   ‚úÖ Protection routes avec middleware"
    echo "   ‚úÖ Dashboard personnalis√© par utilisateur"
    echo "   ‚úÖ Logout avec invalidation token"
    echo "   ‚úÖ Interface moderne avec animations"
    echo ""
    echo "üí° Ouvrez http://localhost:3001 et connectez-vous !"
    echo ""
    echo "üéØ L'APPLICATION MOBILE S√âCURIS√âE EST PR√äTE !"
else
    echo "‚ö†Ô∏è Certains tests ont √©chou√© ($((TOTAL_TESTS - SUCCESS_COUNT))/$TOTAL_TESTS)"
    echo "   V√©rifiez les logs pour plus de d√©tails"
fi

echo ""
echo "üìã INFORMATIONS TECHNIQUES:"
echo "   üîê Authentification: JWT tokens"
echo "   üìä Donn√©es: Filtr√©es par utilisateur"
echo "   üé® Design: Material Design moderne"
echo "   üì± Interface: Responsive mobile-first"
echo "   üîí S√©curit√©: Middleware de protection"