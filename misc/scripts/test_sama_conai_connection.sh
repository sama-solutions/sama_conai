#!/bin/bash\n\n# Test de connexion SAMA CONAI\necho \"üß™ Test de connexion SAMA CONAI...\"\necho \"========================================\"\n\n# Test 1: Services actifs\necho \"\"\necho \"üì° Test des services...\"\nif curl -s -I http://localhost:3005 | grep -q \"200 OK\"; then\n  echo \"‚úÖ Application mobile (3005): ACTIF\"\nelse\n  echo \"‚ùå Application mobile (3005): INACTIF\"\nfi\n\nif curl -s -I http://localhost:8077 | grep -q -E \"(200|303)\"; then\n  echo \"‚úÖ Backend Odoo (8077): ACTIF\"\nelse\n  echo \"‚ùå Backend Odoo (8077): INACTIF\"\nfi\n\nif curl -s -I http://localhost:8078 | grep -q -E \"(200|303)\"; then\n  echo \"‚úÖ Proxy iframe (8078): ACTIF\"\nelse\n  echo \"‚ùå Proxy iframe (8078): INACTIF\"\nfi\n\n# Test 2: Authentification\necho \"\"\necho \"üîê Test d'authentification...\"\nAUTH_RESPONSE=$(curl -s -X POST http://localhost:3005/api/mobile/auth/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"email\":\"admin\",\"password\":\"admin\"}')\n\nif echo \"$AUTH_RESPONSE\" | grep -q '\"success\":true'; then\n  echo \"‚úÖ Authentification: SUCC√àS\"\n  TOKEN=$(echo \"$AUTH_RESPONSE\" | grep -o '\"token\":\"[^\"]*\"' | cut -d'\"' -f4)\n  echo \"   Token: ${TOKEN:0:20}...\"\nelse\n  echo \"‚ùå Authentification: √âCHEC\"\n  echo \"   R√©ponse: $AUTH_RESPONSE\"\nfi\n\n# Test 3: API Dashboard\nif [ ! -z \"$TOKEN\" ]; then\n  echo \"\"\n  echo \"üìä Test API Dashboard...\"\n  DASHBOARD_RESPONSE=$(curl -s http://localhost:3005/api/mobile/citizen/dashboard \\\n    -H \"Authorization: Bearer $TOKEN\")\n  \n  if echo \"$DASHBOARD_RESPONSE\" | grep -q '\"success\":true'; then\n    echo \"‚úÖ API Dashboard: SUCC√àS\"\n    SOURCE=$(echo \"$DASHBOARD_RESPONSE\" | grep -o '\"source\":\"[^\"]*\"' | cut -d'\"' -f4)\n    echo \"   Source de donn√©es: $SOURCE\"\n  else\n    echo \"‚ùå API Dashboard: √âCHEC\"\n    echo \"   R√©ponse: $DASHBOARD_RESPONSE\"\n  fi\nfi\n\n# Test 4: Headers iframe\necho \"\"\necho \"üñºÔ∏è Test headers iframe...\"\nIFRAME_HEADERS=$(curl -s -I http://localhost:8078/web)\nif echo \"$IFRAME_HEADERS\" | grep -q -i \"x-frame-options.*allowall\"; then\n  echo \"‚úÖ Headers iframe: OK\"\nelse\n  echo \"‚ö†Ô∏è Headers iframe: √Ä v√©rifier\"\n  echo \"   X-Frame-Options: $(echo \"$IFRAME_HEADERS\" | grep -i x-frame-options || echo 'absent')\"\nfi\n\necho \"\"\necho \"üéØ Test termin√©!\""