version: "3.8"

services:
  # Base de donn√©es PostgreSQL
  postgres:
    image: postgres:16
    container_name: sama_conai_postgres
    environment:
      POSTGRES_DB: sama_conai_production
      POSTGRES_USER: odoo
      POSTGRES_PASSWORD: odoo
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U odoo -d sama_conai_production"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sama_conai_network

  # Serveur Odoo
  odoo:
    image: odoo:18.0
    container_name: sama_conai_odoo
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8069:8069"
    environment:
      - HOST=postgres
      - USER=odoo
      - PASSWORD=odoo
      - DB_NAME=sama_conai_production
      - PROXY_MODE=True
      - WORKERS=0
      - LOG_LEVEL=info
    volumes:
      - odoo_data:/var/lib/odoo
      - ./:/mnt/extra-addons/sama_conai:ro
      - ./logs:/var/log/odoo
      - ./backups:/backups
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8069/web/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - sama_conai_network

  # Application Mobile Web
  mobile_web:
    build:
      context: ./mobile_app_web
      dockerfile: Dockerfile
    container_name: sama_conai_mobile_web
    depends_on:
      odoo:
        condition: service_healthy
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - ODOO_URL=http://odoo:8069
      - ODOO_DB=sama_conai_production
      - ODOO_USER=admin
      - ODOO_PASSWORD=admin
      - NODE_ENV=production
    volumes:
      - ./mobile_app_web/logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - sama_conai_network

  # Reverse Proxy Nginx
  nginx:
    image: nginx:alpine
    container_name: sama_conai_nginx
    depends_on:
      - odoo
      - mobile_web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    restart: unless-stopped
    networks:
      - sama_conai_network

  # Redis pour le cache (optionnel)
  redis:
    image: redis:7-alpine
    container_name: sama_conai_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    networks:
      - sama_conai_network

  # Service de monitoring (optionnel)
  monitoring:
    image: prom/prometheus:latest
    container_name: sama_conai_monitoring
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - sama_conai_network

volumes:
  postgres_data:
    driver: local
  odoo_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local

networks:
  sama_conai_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16