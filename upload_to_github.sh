#!/bin/bash

# =============================================================================
# SAMA CONAI - Script d'Upload Automatis√© vers GitHub
# =============================================================================
# Auteurs: Mamadou Mbagnick DOGUE & Rassol DOGUE
# Description: Upload automatis√© de SAMA CONAI vers GitHub
# =============================================================================

set -e

# Couleurs
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m'

print_header() {
    echo -e "${PURPLE}============================================${NC}"
    echo -e "${PURPLE}$1${NC}"
    echo -e "${PURPLE}============================================${NC}"
}

print_step() {
    echo -e "${BLUE}[√âTAPE]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCC√àS]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERREUR]${NC} $1"
}

print_info() {
    echo -e "${CYAN}[INFO]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[ATTENTION]${NC} $1"
}

# Variables
PROJECT_NAME="SAMA CONAI"
VERSION="3.0.0"
REPO_URL="https://github.com/sama-solutions/conai"

print_header "üá∏üá≥ $PROJECT_NAME - Upload vers GitHub"
echo -e "Version: ${GREEN}$VERSION${NC}"
echo -e "Repository: ${CYAN}$REPO_URL${NC}"
echo ""

# =============================================================================
# 1. V√âRIFICATIONS PR√âLIMINAIRES
# =============================================================================

print_step "1. V√©rifications pr√©liminaires"

# V√©rifier Git
if ! command -v git &> /dev/null; then
    print_error "Git n'est pas install√©"
    exit 1
fi
print_success "Git disponible: $(git --version)"

# V√©rifier GitHub CLI
if ! command -v gh &> /dev/null; then
    print_error "GitHub CLI n'est pas install√©"
    print_info "Installez avec: sudo apt install gh"
    exit 1
fi
print_success "GitHub CLI disponible: $(gh --version | head -1)"

# V√©rifier le repository Git
if [ ! -d ".git" ]; then
    print_error "Pas dans un repository Git"
    exit 1
fi
print_success "Repository Git d√©tect√©"

# V√©rifier le statut Git
if [ ! -z "$(git status --porcelain)" ]; then
    print_warning "Fichiers non commit√©s d√©tect√©s"
    git status --porcelain
    echo -n "Continuer quand m√™me ? (y/N): "
    read continue_anyway
    if [ "$continue_anyway" != "y" ] && [ "$continue_anyway" != "Y" ]; then
        print_error "Upload annul√©"
        exit 1
    fi
fi

# =============================================================================
# 2. AUTHENTIFICATION GITHUB
# =============================================================================

print_step "2. V√©rification de l'authentification GitHub"

# V√©rifier l'authentification
if ! gh auth status &> /dev/null; then
    print_warning "Non authentifi√© sur GitHub"
    print_info "Lancement de l'authentification..."
    
    if ! gh auth login; then
        print_error "√âchec de l'authentification GitHub"
        exit 1
    fi
    
    print_success "Authentification GitHub r√©ussie"
else
    print_success "D√©j√† authentifi√© sur GitHub"
    gh auth status
fi

# =============================================================================
# 3. UPLOAD DU CODE
# =============================================================================

print_step "3. Upload du code vers GitHub"

# Push du code principal
print_info "Push de la branche main..."
if git push origin main; then
    print_success "Code principal upload√©"
else
    print_error "√âchec du push de la branche main"
    exit 1
fi

# Push du tag
print_info "Push du tag v$VERSION..."
if git push origin v$VERSION; then
    print_success "Tag v$VERSION upload√©"
else
    print_warning "√âchec du push du tag (peut-√™tre d√©j√† existant)"
fi

# =============================================================================
# 4. CR√âATION DE LA RELEASE
# =============================================================================

print_step "4. Cr√©ation de la release v$VERSION"

# V√©rifier si la release existe d√©j√†
if gh release view v$VERSION &> /dev/null; then
    print_warning "Release v$VERSION existe d√©j√†"
    echo -n "Supprimer et recr√©er ? (y/N): "
    read recreate_release
    if [ "$recreate_release" = "y" ] || [ "$recreate_release" = "Y" ]; then
        gh release delete v$VERSION --yes
        print_info "Ancienne release supprim√©e"
    else
        print_info "Conservation de la release existante"
    fi
fi

# Cr√©er la release si elle n'existe pas
if ! gh release view v$VERSION &> /dev/null; then
    print_info "Cr√©ation de la release v$VERSION..."
    
    # Notes de release
    release_notes="# üá∏üá≥ SAMA CONAI v$VERSION - Premi√®re Release Stable

## üéâ Lancement Officiel

Premi√®re version stable de **SAMA CONAI**, le syst√®me d'acc√®s moderne √† l'information pour l'administration publique s√©n√©galaise.

## ‚ú® Fonctionnalit√©s Principales

### üéì Formation Compl√®te
- **8 modules** de formation (27 le√ßons)
- **Certification par r√¥le** (Agent Public, Citoyen)
- **Contenu interactif** avec quiz et simulations
- **100% adapt√©** au contexte s√©n√©galais

### üë• Interface Multi-Utilisateurs
- **Portail Citoyen** : Soumission et suivi des demandes
- **Dashboard Agent** : Gestion professionnelle des dossiers
- **Interface Superviseur** : Analytics et reporting avanc√©s
- **Application Mobile** : PWA compl√®te

### üìä Analytics Avanc√©s
- **Tableaux de bord** en temps r√©el
- **Rapports automatis√©s** pour la transparence
- **Indicateurs de performance** personnalisables

### üîí S√©curit√© & Conformit√©
- **OAuth 2.0** et JWT
- **Chiffrement** des donn√©es sensibles
- **Audit trail** complet
- **Conformit√© RGPD**

## üöÄ Installation Rapide

\`\`\`bash
git clone $REPO_URL.git
cd conai
pip install -r requirements.txt
python manage.py migrate
python manage.py runserver
\`\`\`

## üìö Documentation

- [Guide de D√©marrage Rapide](QUICKSTART.md)
- [Guide d'Installation](INSTALLATION.md)
- [Guide de Contribution](CONTRIBUTING.md)
- [Politique de S√©curit√©](SECURITY.md)

## üë®‚Äçüíª Auteurs

- **Mamadou Mbagnick DOGUE** - Architecte Principal & Lead Developer
- **Rassol DOGUE** - Co-Architecte & Innovation Lead

## üôè Remerciements

Merci √† tous ceux qui ont contribu√© √† faire de SAMA CONAI une r√©alit√© pour l'administration publique s√©n√©galaise.

---

**üá∏üá≥ Fait avec ‚ù§Ô∏è au S√©n√©gal pour l'Afrique et le Monde**"

    if echo "$release_notes" | gh release create v$VERSION --title "SAMA CONAI v$VERSION - Complete Release üéâ" --notes-file -; then
        print_success "Release v$VERSION cr√©√©e"
    else
        print_error "√âchec de la cr√©ation de la release"
    fi
fi

# =============================================================================
# 5. CONFIGURATION DU REPOSITORY
# =============================================================================

print_step "5. Configuration du repository"

# Activer les fonctionnalit√©s
print_info "Activation des fonctionnalit√©s du repository..."

# Issues
if gh repo edit --enable-issues; then
    print_success "Issues activ√©es"
else
    print_warning "√âchec activation Issues"
fi

# Wiki
if gh repo edit --enable-wiki; then
    print_success "Wiki activ√©"
else
    print_warning "√âchec activation Wiki"
fi

# Projects
if gh repo edit --enable-projects; then
    print_success "Projects activ√©s"
else
    print_warning "√âchec activation Projects"
fi

# Discussions
if gh repo edit --enable-discussions; then
    print_success "Discussions activ√©es"
else
    print_warning "√âchec activation Discussions"
fi

# Ajouter les topics
print_info "Ajout des topics..."
topics="senegal,public-administration,information-access,transparency,odoo,python,government,africa,open-source,civic-tech,french,training,certification,pwa,mobile-first"

if gh repo edit --add-topic "$topics"; then
    print_success "Topics ajout√©s"
else
    print_warning "√âchec ajout des topics"
fi

# =============================================================================
# 6. V√âRIFICATIONS FINALES
# =============================================================================

print_step "6. V√©rifications finales"

# V√©rifier le repository
print_info "V√©rification du repository..."
if gh repo view; then
    print_success "Repository accessible"
else
    print_error "Probl√®me d'acc√®s au repository"
fi

# V√©rifier la release
print_info "V√©rification de la release..."
if gh release view v$VERSION; then
    print_success "Release v$VERSION confirm√©e"
else
    print_warning "Probl√®me avec la release"
fi

# Statistiques finales
print_info "Statistiques du repository:"
echo "  - URL: $REPO_URL"
echo "  - Version: v$VERSION"
echo "  - Fichiers upload√©s: $(git ls-files | wc -l)"
echo "  - Commits: $(git rev-list --count HEAD)"

# =============================================================================
# 7. SUCC√àS ET PROCHAINES √âTAPES
# =============================================================================

print_header "üéâ Upload R√©ussi !"

echo -e "${GREEN}‚úÖ SAMA CONAI a √©t√© upload√© avec succ√®s sur GitHub !${NC}\n"

echo -e "${YELLOW}üîó Liens Importants:${NC}"
echo "  - Repository: $REPO_URL"
echo "  - Release: $REPO_URL/releases/tag/v$VERSION"
echo "  - Issues: $REPO_URL/issues"
echo "  - Wiki: $REPO_URL/wiki"

echo -e "\n${YELLOW}üì¢ Prochaines √âtapes:${NC}"
echo "1. V√©rifier l'affichage sur GitHub"
echo "2. Configurer la protection de branche"
echo "3. Ajouter une image de social preview"
echo "4. Cr√©er une issue de bienvenue"
echo "5. Promouvoir sur les r√©seaux sociaux"

echo -e "\n${YELLOW}üöÄ Promotion Sugg√©r√©e:${NC}"
echo "LinkedIn: Partager l'annonce du lancement"
echo "Twitter: Thread sur les fonctionnalit√©s"
echo "Dev.to: Article technique d√©taill√©"
echo "Reddit: Partage dans r/opensource, r/Python, r/Senegal"

echo -e "\n${CYAN}üí° Commandes Utiles:${NC}"
echo "  - Ouvrir le repository: ${BLUE}gh repo view --web${NC}"
echo "  - Voir les issues: ${BLUE}gh issue list${NC}"
echo "  - Cr√©er une issue: ${BLUE}gh issue create${NC}"
echo "  - Voir les releases: ${BLUE}gh release list${NC}"

print_header "üá∏üá≥ SAMA CONAI sur GitHub - Mission Accomplie !"

echo -e "${PURPLE}Merci d'avoir utilis√© ce script d'upload !${NC}"
echo -e "${PURPLE}SAMA CONAI est maintenant pr√™t √† conqu√©rir la communaut√© open source ! üöÄ${NC}"

exit 0