#!/bin/bash

# SAMA CONAI Formation Website - Lanceur de serveur
# Arr√™te automatiquement les processus sur le port 8000 et d√©marre le serveur

PORT=8000
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

echo "üöÄ D√©marrage du serveur SAMA CONAI..."
echo "üìÅ R√©pertoire: $SCRIPT_DIR"

# Changer vers le r√©pertoire du script
cd "$SCRIPT_DIR"

# Fonction pour arr√™ter les processus sur le port
kill_port_processes() {
    echo "üîç V√©rification du port $PORT..."
    
    # M√©thode 1: Utiliser lsof
    if command -v lsof >/dev/null 2>&1; then
        PIDS=$(lsof -ti :$PORT 2>/dev/null)
        if [ ! -z "$PIDS" ]; then
            echo "üõë Arr√™t des processus utilisant le port $PORT..."
            echo "$PIDS" | xargs -r kill -TERM
            sleep 2
            
            # V√©rifier s'il reste des processus et les forcer √† s'arr√™ter
            REMAINING_PIDS=$(lsof -ti :$PORT 2>/dev/null)
            if [ ! -z "$REMAINING_PIDS" ]; then
                echo "‚ö° Arr√™t forc√© des processus restants..."
                echo "$REMAINING_PIDS" | xargs -r kill -KILL
                sleep 1
            fi
            echo "‚úÖ Port $PORT lib√©r√©"
        else
            echo "‚úÖ Port $PORT d√©j√† libre"
        fi
    # M√©thode 2: Utiliser netstat si lsof n'est pas disponible
    elif command -v netstat >/dev/null 2>&1; then
        echo "üîÑ Utilisation de netstat..."
        PIDS=$(netstat -tlnp 2>/dev/null | grep ":$PORT " | grep LISTEN | awk '{print $7}' | cut -d'/' -f1 | grep -E '^[0-9]+$')
        if [ ! -z "$PIDS" ]; then
            echo "üõë Arr√™t des processus utilisant le port $PORT..."
            echo "$PIDS" | xargs -r kill -TERM
            sleep 2
            echo "‚úÖ Port $PORT lib√©r√©"
        else
            echo "‚úÖ Port $PORT d√©j√† libre"
        fi
    else
        echo "‚ö†Ô∏è lsof et netstat non disponibles, tentative de d√©marrage direct..."
    fi
}

# Fonction pour afficher la banni√®re
print_banner() {
    echo "======================================================================"
    echo "üåê SAMA CONAI Formation Website - Serveur de D√©veloppement"
    echo "======================================================================"
    echo "üìÅ R√©pertoire: $(pwd)"
    echo "üåç URL Locale: http://localhost:$PORT"
    echo "üîó URL R√©seau: http://0.0.0.0:$PORT"
    echo "======================================================================"
    echo "üìã Pages disponibles:"
    echo "   ‚Ä¢ Accueil: http://localhost:$PORT/"
    echo "   ‚Ä¢ Formation Citoyen: http://localhost:$PORT/formation/citoyen.html"
    echo "   ‚Ä¢ Formation Agent: http://localhost:$PORT/formation/agent.html"
    echo "   ‚Ä¢ Formation Admin: http://localhost:$PORT/formation/administrateur.html"
    echo "   ‚Ä¢ Formation Formateur: http://localhost:$PORT/formation/formateur.html"
    echo "   ‚Ä¢ Certification: http://localhost:$PORT/certification/utilisateur.html"
    echo "======================================================================"
    echo "üí° Conseils:"
    echo "   ‚Ä¢ Appuyez sur Ctrl+C pour arr√™ter le serveur"
    echo "   ‚Ä¢ Le navigateur s'ouvrira automatiquement"
    echo "======================================================================"
}

# Fonction pour ouvrir le navigateur
open_browser() {
    sleep 3
    URL="http://localhost:$PORT"
    
    if command -v xdg-open >/dev/null 2>&1; then
        xdg-open "$URL" >/dev/null 2>&1 &
    elif command -v open >/dev/null 2>&1; then
        open "$URL" >/dev/null 2>&1 &
    elif command -v firefox >/dev/null 2>&1; then
        firefox "$URL" >/dev/null 2>&1 &
    elif command -v google-chrome >/dev/null 2>&1; then
        google-chrome "$URL" >/dev/null 2>&1 &
    elif command -v chromium >/dev/null 2>&1; then
        chromium "$URL" >/dev/null 2>&1 &
    else
        echo "üåê Ouvrez manuellement: $URL"
    fi
}

# Gestionnaire de signal pour arr√™t propre
cleanup() {
    echo ""
    echo "üõë Arr√™t du serveur..."
    echo "üëã Merci d'avoir utilis√© SAMA CONAI Formation Website!"
    exit 0
}

# Capturer Ctrl+C
trap cleanup SIGINT SIGTERM

# Arr√™ter les processus sur le port
kill_port_processes

# Afficher la banni√®re
print_banner

# Ouvrir le navigateur en arri√®re-plan
open_browser &

echo "üöÄ D√©marrage du serveur Python..."
echo "üìù Appuyez sur Ctrl+C pour arr√™ter"
echo ""

# D√©marrer le serveur Python
if command -v python3 >/dev/null 2>&1; then
    python3 -m http.server $PORT
elif command -v python >/dev/null 2>&1; then
    python -m http.server $PORT
else
    echo "‚ùå Python non trouv√©. Veuillez installer Python 3."
    exit 1
fi